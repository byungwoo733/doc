<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Excel.Sheet>
<meta name=Generator content="Microsoft Excel 15">
<link id=Main-File rel=Main-File
href="../Musl_libc_Supported_Api_Difference_Point.htm">
<link rel=File-List href=filelist.xml>
<link rel=Stylesheet href=stylesheet.css>
<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:.75in .7in .75in .7in;
	mso-header-margin:.3in;
	mso-footer-margin:.3in;}
-->
</style>
<![if !supportTabStrip]><script language="JavaScript">
<!--
function fnUpdateTabs()
 {
  if (parent.window.g_iIEVer>=4) {
   if (parent.document.readyState=="complete"
    && parent.frames['frTabs'].document.readyState=="complete")
   parent.fnSetActiveSheet(7);
  else
   window.setTimeout("fnUpdateTabs();",150);
 }
}

if (window.name!="frSheet")
 window.location.replace("../Musl_libc_Supported_Api_Difference_Point.htm");
else
 fnUpdateTabs();
//-->
</script>
<![endif]>
</head>

<body link=blue vlink=purple>

<table border=0 cellpadding=0 cellspacing=0 width=1042 style='border-collapse:
 collapse;table-layout:fixed;width:781pt'>
 <col width=64 style='width:48pt'>
 <col width=27 style='mso-width-source:userset;mso-width-alt:987;width:20pt'>
 <col width=259 style='mso-width-source:userset;mso-width-alt:9472;width:194pt'>
 <col width=363 style='mso-width-source:userset;mso-width-alt:13275;width:272pt'>
 <col width=329 style='mso-width-source:userset;mso-width-alt:12032;width:247pt'>
 <tr height=21 style='height:15.75pt'>
  <td height=21 width=64 style='height:15.75pt;width:48pt'></td>
  <td width=27 style='width:20pt'></td>
  <td width=259 style='width:194pt'></td>
  <td width=363 style='width:272pt'></td>
  <td width=329 style='width:247pt'></td>
 </tr>
 <tr height=21 style='height:15.75pt'>
  <td height=21 style='height:15.75pt'></td>
  <td class=xl107 width=27 style='width:20pt'>No</td>
  <td class=xl108 width=259 style='width:194pt'>Case</td>
  <td class=xl108 width=363 style='width:272pt'>Behaviour in musl-libc</td>
  <td class=xl108 width=329 style='width:247pt'>Behaviour in glibc</td>
 </tr>
 <tr height=160 style='height:120.0pt'>
  <td height=160 style='height:120.0pt'></td>
  <td class=xl152 width=27 style='width:20pt'>1</td>
  <td class=xl110 width=259 style='border-left:none;width:194pt'>Sending
  SIGCANCEL signal directly using syscall().</td>
  <td class=xl110 width=363 style='border-left:none;width:272pt'>When SIGCANCEL
  signal is sent using syscall()(Ex. Kill(), syscall(SYS_tgkill), etc.) then
  whole thread group will be terminated instead of target thread.<br>
    Unlike glibc, musl-libc installs handler for SIGCANCEL after
  pthread_cancel() is called. So, if SIGCANCEL signal is sent prior to
  pthread_cancel() invokation, it will result in termination of thread group as
  default action of SIGCANCEL is terminate.</td>
  <td class=xl153 width=329 style='border-left:none;width:247pt'>Only target
  thread will be terminated</td>
 </tr>
 <tr height=84 style='mso-height-source:userset;height:63.0pt'>
  <td height=84 style='height:63.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>2</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>sigtimedwait()/sigwaitinfo()</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>sigtimedwait()/sigwaitinfo()
  will never fail with EINTR.<br>
    According to musl-libc implemenation of sigwaitinfo()/sigtimedwait() these
  wrapper function re-invokes syscall rt_sigtimedwait()<span
  style='mso-spacerun:yes'>  </span>upon failing with EINTR<br>
    </td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Fail
  with EINTR.</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>3</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_sigqueue()</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>compilation
  error</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>API
  implemented</td>
 </tr>
 <tr height=44 style='mso-height-source:userset;height:33.0pt'>
  <td height=44 style='height:33.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>4</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>sigaltstack()</td>
  <td class=xl82 width=363 style='width:272pt'>If new alternate stack “ss”
  argument of sigaltstack points to an invalid address then sigaltstack() will
  result in segfault</td>
  <td class=xl153 width=329 style='border-top:none;width:247pt'>In glibc
  sigaltstack() process will not terminate with segfault instead it will fails
  will error EFAULT.</td>
 </tr>
 <tr height=60 style='mso-height-source:userset;height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>5</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>sigprocmask()</td>
  <td class=xl110 width=363 style='border-left:none;width:272pt'><span
  style='mso-spacerun:yes'> </span>If an attempt is made to update signal mask
  with invalid &quot;how&quot; and &quot;mask&quot; argument then sigprocmask()
  will fail with EINVAL.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>sigprocmask()
  will fail with EFAULT.</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>6</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>sigtimedwait()</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>if
  sigtimedwait() invoked with invalid &quot;set&quot; argument then it fails
  with EFAULT.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>sigtimedwait()
  will fail with segmentation fault.</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>7</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>sched_getscheduler</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>API
  returning ENOSYS</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>API
  implemented</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>8</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>When
  a detached thread is tried to join</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>pthread_join
  results in deadlock.</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>pthread_join
  returns EINVAL.</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>9</td>
  <td class=xl89 width=259 style='border-top:none;border-left:none;width:194pt'>When
  pthread_join is called with an invalid thread id</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>results
  in segmentation fault.</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>returns
  ESRCH.</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>10</td>
  <td class=xl89 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_getaffinity_np
  &amp; pthread_attr_setaffinity_np</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>compilation
  error(API’s not implemented).</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>API’s
  are implemented.</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>11</td>
  <td class=xl89 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_timedjoin_np,</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>API
  not implemented(compilation error).</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>API
  implemented.</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>12</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_tryjoin_np</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>API
  not implemented(compilation error).</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>API
  implemented.</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>13</td>
  <td class=xl89 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_setschedparam,
  returns EINVAL when invalid param argument is set</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is generated.</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned.</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>14</td>
  <td class=xl89 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_setschedpolicy,
  returns EINVAL when invalid policy argument is set,</td>
  <td class=xl89 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is generated.</td>
  <td class=xl91 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned.</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>15</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_setguardsize,
  returns EINVAL when negative guardsize value is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>EINVAL
  is returned</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>No
  error is returned.</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>16</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_setschedparam,
  returns EINVAL when negative param argument is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is returned.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned.</td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.25pt'>
  <td height=43 style='height:32.25pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>17</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'><span
  style='mso-spacerun:yes'> </span>pthread_attr_setstacksize, returns EINVAL
  when -1 in stacksize argument is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>EINVAL
  is returned.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>No
  error is returned.</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>18</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_setaffinity_np
  &amp; pthread_getaffinity_np, returns ESRCH when an invalid thread id is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>ESRCH
  is returned.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>No
  error is returned.</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>19</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'><span
  style='mso-spacerun:yes'> </span>pthread_mutexattr_setprioceiling &amp;
  pthread_mutexattr_getprioceiling,</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>API
  not implemented(Compilation error).</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>API
  implemented.</td>
 </tr>
 <tr height=22 style='mso-height-source:userset;height:16.5pt'>
  <td height=22 style='height:16.5pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>20</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>PTHREAD_MUTEX_ADAPTIVE_NP,<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>Macro
  not defined.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Macro
  defined.</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>21</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'><span
  style='mso-spacerun:yes'> </span>pthread_mutexattr_setprotocol, When protocol
  argument is some non-zero value</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>API
  returning ENOTSUP</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>No
  error is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>22</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_mutex_trylock,
  returns EINVAL when tries to lock with an unintialised variable</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is returned</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>23</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'><span
  style='mso-spacerun:yes'> </span>pthread_mutex_unlock, returns EINVAL when
  tries to lock with an unintialised variable</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is returned</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>24</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_mutex_lock,
  returns EINVAL when tries to lock with an unintialised variable</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is returned</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>25</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'><span
  style='mso-spacerun:yes'> </span>pthread_cond_destroy, returns EBUSY when
  trying to destroy conditional variable which is in use</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is returned</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EBUSY
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>26</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_condattr_setclock,
  return EINVAL when invalid clock id is set</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is returned</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>27</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_rwlock_rdlock,
  returns EDEADLK, when lock is already acquired</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>goes
  into deadlock</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EDEADLK
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>28</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>PTHREAD_RWLOCK_PREFER_READER_NP,</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>MACRO
  not implemented</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>MACRO
  implemented</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>29</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>PTHREAD_RWLOCK_PREFER_WRITER_NP,<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>MACRO
  not implemented</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>MACRO
  implemented</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>30</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_rwlockattr_setkind_np,</td>
  <td class=xl154>Function not implemented</td>
  <td class=xl155>Function implemented</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>31</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_rwlockattr_getkind_np,</td>
  <td class=xl110 width=363 style='border-left:none;width:272pt'>Function not
  implemented</td>
  <td class=xl153 width=329 style='border-left:none;width:247pt'>Function
  implemented</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>32</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>Sem_close,
  returns EINVAL when invalid semaphore is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>33</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_barrier_destroy
  returns EBUSY when made an attempt to destroy a barrier while it<span
  style='mso-spacerun:yes'>  </span>is<span style='mso-spacerun:yes'> 
  </span>in<span style='mso-spacerun:yes'>  </span>use</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is generated</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EBUSY
  error is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>34</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_barrierattr_setpshared
  returns EINVAL when barrier attribute is invalid</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is generated</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>35</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>Pthread_cancel
  returns ESRCH, when no thread with thread ID is found</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>ESRCH
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>36</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'><span
  style='mso-spacerun:yes'> </span>Pthread_kill returns ESRCH, when no thread
  with thread ID is found</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>ESRCH
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>37</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>Pthread_setconcurrency</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>EAGAIN
  is returned(in musl-libc concurrency can be set only to 0)</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Executed
  without any failure</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>38</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_getcpuclockid
  returns ESRCH, when no thread with thread ID is present</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>ESRCH
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>39</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_setschedparam
  returns ESRCH, when no thread with thread ID is present</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>ESRCH
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>40</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_getschedparam
  returns ESRCH, when no thread with thread ID is present</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>ESRCH
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>41</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_setschedparam
  returns EINVAL, when an invalid policy argument is set</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>No
  error is generated</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=60 style='height:45.0pt'>
  <td height=60 style='height:45.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>42</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_setschedprio
  returns ESRCH, when no thread with thread ID is present</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>ESRCH
  is returned</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>43</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_setspecific
  returns EINVAL, when an invalid key is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>44</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_yield</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>Function
  not implemented</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Function
  implemented</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>45</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_key_delete
  returns EINVAL, when an invalid key is used</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>segmentation
  fault</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>EINVAL
  is returned</td>
 </tr>
 <tr height=80 style='height:60.0pt'>
  <td height=80 style='height:60.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>46</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>dlcose()
  receives the address of library as an argument and return 0 (success) when it
  find the library or return 1 when library is not found.</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>On
  success, musl-libc do not unload the library.<br>
    Which means it return 0 but do not free the memory occupied by library.</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>On
  success, Glibc unloaded the library.</td>
 </tr>
 <tr height=180 style='height:135.0pt'>
  <td height=180 style='height:135.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>47</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>write()</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>write(2)
  system call wrapper of musl-libc does not have checking/validation of buffer
  size (sizet_count ) passed as an argument .<br>
    Instead write wrapper of musl libc directly invoke kernel’s write(2) system
  call. Hence if the user program passes the value of count argument as 0 (
  zero byte write ), user program will receive<span style='mso-spacerun:yes'> 
  </span>&quot;Bad Address&quot; (-EFAULT) from kernel.<br>
    </td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Glibc
  write(2) system call wrapper perform<span style='mso-spacerun:yes'> 
  </span>validation on buffer size ( size_t count) passed as an argument before
  invoking the kernel write(2) system call. Hence if the user program pass the
  value of count argument as 0 ( zero byte), glibc write (2) wrapper will
  return 0 (success) to the user program .</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>48</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_getstackaddr</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>In
  musl-libc there is no such api definition</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Api
  is present in glibc</td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>49</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>pthread_attr_setstackaddr</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>In
  musl-libc there is no such api definition</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>Api
  is present in glibc</td>
 </tr>
 <tr height=40 style='height:30.0pt'>
  <td height=40 style='height:30.0pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>50</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>sysconf</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>In
  musl-libc for value SC_NGROUPS_MAX API returns 32</td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>In
  glibc for value SC_NGROUPS_MAX API returns 65536</td>
 </tr>
 <tr height=63 style='height:47.25pt'>
  <td height=63 style='height:47.25pt'></td>
  <td class=xl152 width=27 style='border-top:none;width:20pt'>51</td>
  <td class=xl110 width=259 style='border-top:none;border-left:none;width:194pt'>recvmsg()</td>
  <td class=xl110 width=363 style='border-top:none;border-left:none;width:272pt'>When
  the 2<font class="font19"><sup>nd</sup></font><font class="font0"> argument
  (struct msghdr) is passed as an invalid address in recvmsg() then it get
  crashed in case of musl-libc.</font></td>
  <td class=xl153 width=329 style='border-top:none;border-left:none;width:247pt'>When
  the 2<font class="font19"><sup>nd</sup></font><font class="font0"> argument
  (struct msghdr) is passed as an invalid address in recvmsg() then it returns
  EFAULT in case of glibc.</font></td>
 </tr>
 <tr height=121 style='height:90.75pt'>
  <td height=121 style='height:90.75pt'></td>
  <td class=xl156 width=27 style='border-top:none;width:20pt'>52</td>
  <td class=xl157 width=259 style='border-top:none;border-left:none;width:194pt'>Order
  of dynamic library path searching in glibc and musl-libc</td>
  <td class=xl157 width=363 style='border-top:none;border-left:none;width:272pt'>In
  musl-libc, path is searched in below order : <br>
    1.LD_LIBRARY_PATH (in VE, VE_LD_LIBRATY_PATH) <br>
    2.DT_RPATH/DT_RUNPATH (as decided by binutils)<br>
    3 /etc/opt/nec/ve/musl/ld-musl-ve.path<br>
    4.the standard path in a system (/opt/nec/ve/musl/lib/)<br>
    </td>
  <td class=xl158 width=329 style='border-top:none;border-left:none;width:247pt'>In
  glibc, path is searched in below order:<br>
    1.DT_RPATH (if DT_RUNPATH doesn't exist) <br>
    2.LD_LIBRARY_PATH <br>
    3.DT_RUNPATH <br>
    4.the standard path in a system(/usr/lib64/)<br>
    </td>
 </tr>
 <![if supportMisalignedColumns]>
 <tr height=0 style='display:none'>
  <td width=64 style='width:48pt'></td>
  <td width=27 style='width:20pt'></td>
  <td width=259 style='width:194pt'></td>
  <td width=363 style='width:272pt'></td>
  <td width=329 style='width:247pt'></td>
 </tr>
 <![endif]>
</table>

</body>

</html>
