<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Excel.Sheet>
<meta name=Generator content="Microsoft Excel 15">
<link id=Main-File rel=Main-File
href="../Musl_libc_Supported_Api_Difference_Point.htm">
<link rel=File-List href=filelist.xml>
<link rel=Stylesheet href=stylesheet.css>
<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:.75in .7in .75in .7in;
	mso-header-margin:.3in;
	mso-footer-margin:.3in;}
ruby
	{ruby-align:left;}
rt
	{color:windowtext;
	font-size:6.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:"ＭＳ Ｐゴシック", monospace;
	mso-font-charset:128;
	mso-char-type:katakana;
	display:none;}
-->
</style>
<![if !supportTabStrip]><script language="JavaScript">
<!--
function fnUpdateTabs()
 {
  if (parent.window.g_iIEVer>=4) {
   if (parent.document.readyState=="complete"
    && parent.frames['frTabs'].document.readyState=="complete")
   parent.fnSetActiveSheet(6);
  else
   window.setTimeout("fnUpdateTabs();",150);
 }
}

if (window.name!="frSheet")
 window.location.replace("../Musl_libc_Supported_Api_Difference_Point.htm");
else
 fnUpdateTabs();
//-->
</script>
<![endif]>
</head>

<body link=blue vlink=purple>

<table border=0 cellpadding=0 cellspacing=0 width=1231 style='border-collapse:
 collapse;table-layout:fixed;width:923pt'>
 <col width=39 style='mso-width-source:userset;mso-width-alt:1248;width:29pt'>
 <col class=xl65 width=31 style='mso-width-source:userset;mso-width-alt:992;
 width:23pt'>
 <col width=240 style='mso-width-source:userset;mso-width-alt:7680;width:180pt'>
 <col width=417 style='mso-width-source:userset;mso-width-alt:13344;width:313pt'>
 <col width=504 style='mso-width-source:userset;mso-width-alt:16128;width:378pt'>
 <tr height=19 style='height:14.25pt'>
  <td height=19 width=39 style='height:14.25pt;width:29pt'></td>
  <td class=xl65 width=31 style='width:23pt'></td>
  <td width=240 style='width:180pt'></td>
  <td width=417 style='width:313pt'></td>
  <td width=504 style='width:378pt'></td>
 </tr>
 <tr height=20 style='height:15.0pt'>
  <td height=20 style='height:15.0pt'></td>
  <td class=xl71 width=31 style='width:23pt'>No</td>
  <td class=xl72 width=240 style='width:180pt'>Case</td>
  <td class=xl72 width=417 style='width:313pt'>Difference Point</td>
  <td class=xl72 width=504 style='width:378pt'>Reason</td>
 </tr>
 <tr height=46 style='mso-height-source:userset;height:34.5pt'>
  <td height=46 style='height:34.5pt'></td>
  <td class=xl70 width=31 style='width:23pt'>1</td>
  <td class=xl68 width=240 style='width:180pt'>Floating point exceptions.</td>
  <td class=xl68 width=417 style='width:313pt'>Floating-point exceptions raised
  by VE architecture could be different from x86 architecture.</td>
  <td class=xl68 width=504 style='width:378pt'>VE doesn't have the
  corresponding hardware for de-normal number.</td>
 </tr>
 <tr height=22 style='mso-height-source:userset;height:16.5pt'>
  <td height=22 style='height:16.5pt'></td>
  <td rowspan=2 class=xl198 width=31 style='border-bottom:1.0pt solid black;
  border-top:none;width:23pt'>2</td>
  <td rowspan=2 class=xl199 width=240 style='border-bottom:1.0pt solid black;
  border-top:none;width:180pt'>open syscall</td>
  <td class=xl69 width=417 style='width:313pt'>In VE, first call to open() in a
  user program returns 8.</td>
  <td rowspan=2 class=xl199 width=504 style='border-bottom:1.0pt solid black;
  border-top:none;width:378pt'>Prior fds are already used up by the pseudo
  process for internal uses like communication with driver, veos, etc</td>
 </tr>
 <tr height=32 style='mso-height-source:userset;height:24.0pt'>
  <td height=32 style='height:24.0pt'></td>
  <td class=xl68 width=417 style='width:313pt'>While in Linux, first call to
  open() in a user program returns 3.</td>
 </tr>
 <tr height=19 style='mso-height-source:userset;height:14.25pt'>
  <td height=19 style='height:14.25pt'></td>
  <td rowspan=2 class=xl198 width=31 style='border-bottom:1.0pt solid black;
  border-top:none;width:23pt'>3</td>
  <td rowspan=2 class=xl199 width=240 style='border-bottom:1.0pt solid black;
  border-top:none;width:180pt'>Minimum stack size for thread, i.e.
  PTHREAD_STACK_MIN</td>
  <td class=xl69 width=417 style='width:313pt'>In VE, minimum stack size for
  thread is 4MB.</td>
  <td rowspan=2 class=xl199 width=504 style='border-bottom:1.0pt solid black;
  border-top:none;width:378pt'>Customized for VE architecture.</td>
 </tr>
 <tr height=44 style='mso-height-source:userset;height:33.0pt'>
  <td height=44 style='height:33.0pt'></td>
  <td class=xl68 width=417 style='width:313pt'>While it is 16KB in glibc &amp;
  2KB in musl-libc for x86 architecture.</td>
 </tr>
 <tr height=109 style='mso-height-source:userset;height:81.75pt'>
  <td height=109 class=xl95 style='height:81.75pt'>　</td>
  <td class=xl96 align=right width=31 style='border-top:none;width:23pt'>4</td>
  <td class=xl96 width=240 style='border-top:none;border-left:none;width:180pt'>Sending
  SIGCANCEL signal directly using syscall().</td>
  <td class=xl97 width=417 style='border-top:none;border-left:none;width:313pt'>When
  SIGCANCEL signal is sent using syscall()(Ex. Kill(), syscall(SYS_tgkill),
  etc.) then whole thread group will be terminated instead of target thread.</td>
  <td class=xl98 width=504 style='border-top:none;border-left:none;width:378pt'>Unlike
  glibc, musl-libc installs handler for SIGCANCEL after pthread_cancel() is
  called. So, if SIGCANCEL signal is sent prior to pthread_cancel() invokation,
  it will result in termination of thread group as default action of SIGCANCEL
  is terminate.</td>
 </tr>
 <tr height=253 style='height:189.75pt'>
  <td height=253 style='height:189.75pt'></td>
  <td class=xl134 align=right style='border-top:none'>5</td>
  <td class=xl135 width=240 style='width:180pt'>Specifying user-defined<span
  style='mso-spacerun:yes'>  </span>thread stack with pthread_attr_setstack()</td>
  <td class=xl141 width=417 style='border-left:none;width:313pt'>If user
  creates a thread using user-defined thread stack with pthread_attr_setstack()
  API, stack overflow condition will not occur at the end of stack area.</td>
  <td class=xl136 width=504 style='border-left:none;width:378pt'>As per the
  threading APIs man-pages, following is the behavior:<br>
    <span style='mso-spacerun:yes'> </span>When the user allocates the thread
  stack using pthread_attr_setstack(), then the guard size attribute is ignored
  (i.e. no guard area is created by the library). It is the application's
  responsibility to handle stack overflow (perhaps by using mprotect(2) to
  manually define a guard area at the end of the stack that it has allocated).
  <br>
    <span style='mso-spacerun:yes'> </span>In VEOS, the behavior is different.
  Even after providing a guard area (user provided guard), the stack would
  continue to grow beyond the end of stack and would result in undesirable
  behavior. Hence the API pthread_attr_setstack() should not be used.<br>
    <br>
    When a user specify stack size of child threads, use
  pthread_attr_setstacksize(3). pthread_attr_setstacksize() doesn't cause above
  mentioned issue</td>
 </tr>
 <tr height=99 style='mso-height-source:userset;height:74.25pt'>
  <td height=99 style='height:74.25pt'></td>
  <td class=xl134 align=right>6</td>
  <td class=xl135 width=240 style='border-top:none;width:180pt'>Usage of
  /etc/opt/nec/ve/musl/ld-musl-ve.path.</td>
  <td class=xl141 width=417 style='border-top:none;border-left:none;width:313pt'>In
  VE,<span style='mso-spacerun:yes'>  </span>&quot;ld-musl-ve.path&quot; is the
  file used to fetch dynamic library path to search and load the
  libraries.<span style='mso-spacerun:yes'> </span></td>
  <td class=xl136 width=504 style='border-top:none;border-left:none;width:378pt'>Order
  of searching in musl-libc:<br>
    1.VE_LD_LIBRATY_PATH<br>
    2.DT_RPATH/DT_RUNPATH (as decided by binutils)<br>
    3. /etc/opt/nec/ve/musl/ld-musl-ve.path<br>
    4. the standard path in a system (/opt/nec/ve/musl/lib/)</td>
 </tr>
 <![if supportMisalignedColumns]>
 <tr height=0 style='display:none'>
  <td width=39 style='width:29pt'></td>
  <td width=31 style='width:23pt'></td>
  <td width=240 style='width:180pt'></td>
  <td width=417 style='width:313pt'></td>
  <td width=504 style='width:378pt'></td>
 </tr>
 <![endif]>
</table>

</body>

</html>
